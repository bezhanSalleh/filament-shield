<?php

declare(strict_types=1);

namespace App\Filament\Resources\Shield;

use Bouncer;
use Illuminate\Database\Eloquent\Model;
use BezhanSalleh\FilamentShield\Contracts\ShieldDriver;

class BouncerShieldDriver implements ShieldDriver
{
    public function createRole(array $data): Model
    {
        return Bouncer::role()->firstOrCreate($data);
    }

    public function hasRole($user, string $role): bool
    {
        return $user->is($role);
    }

    public function syncRoles($user, string|array $roles): void
    {
        if (! is_array($roles)) {
            $roles = [$roles];
        }

        $user->roles->each(function ($role) use ($user) {
            $user->retract($role->name);
        });

        foreach ($roles as $role) {
            $user->assign($role);
        }
    }

    public function createPermission(array $data): Model
    {
        return Bouncer::ability()->firstOrCreate($data);
    }

    public function hasPermission($user, string $permission): bool
    {
        return $user->can($permission);
    }

    public function syncPermissions($user, string|array $permissions): void
    {
        if (! is_array($permissions)) {
            $permissions = [$permissions];
        }

        $user->abilities->each(function ($ability) use ($user) {
            $user->disallow($ability->name);
        });

        foreach ($permissions as $permission) {
            $user->allow($permission);
        }
    }

    public function givePermissionsToRole(Model $role, mixed $permissions): void
    {
        Bouncer::sync($role)->abilities($permissions);

        Bouncer::refresh();
    }
}
